name: Publish Package
on:
  push:
    branches:
      - main
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      
      # Set up Node.js and Yarn
      - name: Set up Node.js and Corepack
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      # Fix Yarn configuration and install deps
      - name: Setup Yarn and install dependencies
        run: |
          # Remove or backup the existing .yarnrc.yml to avoid path conflicts
          if [ -f .yarnrc.yml ]; then
            mv .yarnrc.yml .yarnrc.yml.backup
          fi
          
          # Create a clean .yarnrc.yml for CI
          cat > .yarnrc.yml << EOF
          nodeLinker: node-modules
          enableGlobalCache: false
          EOF
          
          # Enable corepack and setup yarn
          corepack enable
          corepack prepare yarn@stable --activate
          
          # Install dependencies
          yarn install --immutable
      
      # Lint, type-check, test
      - name: Quality check
        run: yarn lint && yarn type-check && yarn test
      
      # Build
      - name: Build package
        run: yarn build
      
      # Verify output
      - name: Verify dist
        run: |
          ls dist
          test -f dist/index.js && test -f dist/index.esm.js && test -f dist/index.d.ts
      
      # Git identity for commits
      - name: Configure Git
        run: |
          git config user.name "maheshmuttintidev"
          git config user.email "maheshmuttintidev@gmail.com"
      
      # Bump version and commit
      - name: Bump version
        run: |
          yarn version --patch
          git add package.json
          git commit -m "chore: bump version [skip ci]" || echo "Nothing to commit"
          git push origin main
      
      # Create and push version tag
      - name: Tag release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag v$VERSION
          git push origin v$VERSION
      
      # Publish to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}